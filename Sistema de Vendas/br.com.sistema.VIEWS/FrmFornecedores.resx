<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAqGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABjkSURBVHja7Z0JlFTVmcdfVzc2SjdNQ0M31URABYLiLgFHRUwycUZMosYNF1ADClEM
        CWs3gqIiWzcgRhYB2RqVyOLEMTMuqHOi4ugMaE60TWJcaFlUNkPOmWNCcud+r17JYtd7r7Z+91X9vnP+
        R09tfPXr7/7rvbtaFkEQBEEQBEEQRErRWqtKqwtCKGuqctqaUXGu1iqtRq0mhFDWJG1spVZ/kxq/JKUQ
        Qi2mRhNMoLXzy88fBKGWl1wJFAdpAFX8+iMU6FVAVZAG0MW5L+GPgVDLq8lpgxgAQhgABoAQBmCMARRE
        lFVcpqzW5QihZCVtR9pQaA1AvsD5k5X13XqtOoSQb9XH2o60odAagLiYfJHvL9d6FCHkW8tjbUfaULgN
        oC72hS5dhhDyK2kz0nYwAIQwAAwAIQwAA0AIA6ATECE6ARkGRIhhQCYCIcREIKYCI8RUYAwAIQwAA0AI
        A2BDEITYECRrIVuCreQPgVAgWmEFvCWYRH+uAhBqcb2r1c8yJPo7VwJe24Lv0DroOmxYUqGs0kqtTgjl
        kCpjte0+rHfQaSNe24KvMKnxx6PYcj8YJKrV1/mCzQPQgCJDGlTk9mdV5Cf/iVDuSGpa17ZtAokNYIfT
        RqKW+8EgxVZII+o6aqBd0gZV87aKTHwLodyR1LSubftKwL1XP2rlcLgPG+pLJdstBdiELQjljqSmdW3b
        twMGD+thAAhhABgAQhgABoAQBmCmAWzVr9tK5xIKWFtjtYgBtKAByPNjXleRO55neAkFK6lBqUU/NYsB
        ZMgAblihCk4ZpKz23ZhggoKVrsGCPpeqyI0rMICsG4A8rhu/1aEbU0GRWdI1GblxpXvtYgDpGMBW+1LL
        /uWn4JCBsq8Exr7efJ8ABpCmAUhni77f4tcfGX0VIH0CEzGALBhAHGAlhYbMlExl96xfDCBNA+hEoSFD
        DaATBoABIAwAAwjGACKFqrC8UhV1iCKUcUltSY1hAIYagPyBqme8qLoublTHL3oHoYxJakpqyzYBDMBM
        AxCXlj/UiRsOqBPWfYFQxiQ1JbUlNYYBGGwA4tb2H+3JfQhlTrqmpLYwAAwAYQAYAAaAMAAMAANAGAAG
        gAEgDAADwAAQBoABYAAIA8AAMACEAWAAGADCADAADABhABgABoAwAAwAA0AYAAaAASAMAAPAABAGgAFg
        AAgDwAAwAIQBYABhN4D95mxoIbnkXf4YAAYQYLF0f2yX6rrk98FvZaVzkFySYhL2/DEADCDIYolOe06V
        DLhGtYr2CHwjS8mh5MJr7ZzyJX8MAAMIrEii055Vrap7GLdldavqnrFG5MYm7PljABhAcAaw375UlV9O
        y9B96+WX1L6cbvaeOuz5YwAYQJAGoP9NuV+VS1ZTG5D8ikqOzfIJe/4YAAYQtAF4FkjAcuUT9vwxAAwA
        A8AAMAAMAAPAADAADMC8AimMWKqytEhF2zYveU5ek633p2sARuePAWAApheIFPjzI7qr343voX477kjJ
        Y/KcvCZb70/XAIzOHwPAAEwvEPmVk0LfN+1ktff+3kdIHpPn5DXZen+6BmB0/hgABhAGA5BfOyn43fcd
        KXlMnvNqQOm8PxMGYGz+GAAGgAFgABgABoABYAAYAAaAAWAAGAAGEDIDqHLpBZfnTDeAwPLHADCAsBvA
        O+N7qDOrW9sN5egxcnlMnpPXmGoAgeaPAWAAYTYA0adTY43o6DHyuOQ5eU1z7w3aAALPHwPAAMJuAPGG
        4Ca39wVtAIHmjwFgALlgAKnKFAMILH8MAAPAADAADAADwAAwAAwAA8AAMAAMAAPAADAADAADwAAwAAwA
        A8AAMAAMAAPAADAADAADwAAwAAwAA8AAMAAMAAPAADAADAADwAAwAAwgDwxgf0bPsD9xwwHVdXFjyptq
        piu/m2pKjpJrruWflvycNYgB5JAB6OflkEk5Zy5j59jrwqye8aIqLK9MaVvsdOVnW23JTXKUXHMt/5T/
        broG7ANHfdQMBpAjBiDHTMspuHIQZibPsrcbT6Qw5YMx0pXXwRqSm+SYq/mnIqkBOXXYPnocA8hxA9CP
        R6c9q1pVm3sCLgru5GHbBFxqBwMItQHsty/15JefgkfNSa4E7NuB5voEMICQG4B+TO735JKPYkeJrgKk
        RlI+PBUDMNsATD/9FoX89GQMAANAGAAGgAEgDAADCJsBFEYKVFVZK1Vd3rzkOXlNtt6f/jAd+afzfgwg
        zw1ACuSVSb3UB7P7qPdnHSl5TJ6T12Tr/elO1CH/9N6PAeS5AcivhBTK35adpb5ceuYRksfkOXlNtt6f
        7lRd8k8/fwwgzw1Afi2kYP5vyZGSx+Q5rwJM5/3kH+78MQAMgAaEAWAAGAANCAPAADAAGhAGgAHklgF0
        bpe4gOQ50xsQ+WMAGECKBfhhXR91drfj7EI7eoxZHpPn5DWmNiDyxwAwgBQLUPSXxWfYBXb0GHNc8py8
        prn3Bt2AyB8DwADSLMB4IbnJ7X1BNyDyxwAwgDQLMFWZ0oDIHwPAAGhA5I8BYAA0IPLHADAAGhD5YwAY
        AA2I/DEADIAGRP4YAAZAAyJ/DAADoAGRPwaAAdCAyB8DwABoQOSPAWAANCDyxwAwABoQ+WMAmTWAShW5
        /VkVqXk7BuxwyWP6OXmNFcCmlOkq6E01yT/7+adbvxhASYWKDGmIQRQnPVzymH5OXmMFsC11ugp6W23y
        z37+6dYvBlAQiQESl5RLpSNUGXtOXhPQwRTpKuiDNcg/u/mnXb95bwAI5bcwAIQwAAwAIQwgB6NKq5E/
        NELNqtFpIzkbrbVW8odGqFmt0Cq2cjz6cxWA0Nf0rlY/K0+iv3Ml0Ojc9+SKdmgddPkjH3ReQ37hzC8b
        anR++fOm8cej2Lnf6ZIjimr1dQo0UQHvcF4TJb/Q5ZctVeXDZX++RNRjlKPJeQ35hTM/gkhrmDPoYR7y
        IwgaGPkRBA2M/AiCBkZ+BEEDIz+CoIGRH0HQwMiPIGhg5EcQ/iNKA8t6fkwEypOQlYNhmirsZyorBpBe
        fmGcClzl1DKRRJyrtcoK32Ihr8UsGEB6+YVxMZDUsCx860+z9t/4c3W5MAaQXn5h3+wDE/Bx2b/KYssn
        DCA3JVcCrPxziVzfMgwDyG8DyPktvygAswvAdAPgBwADyGkDWBHwJaDpBpDre0ZiAHlsACbs+RaGiTa5
        vGckBpBmgYZ1GGiFZcaeb2GZaRfWPSNNHwYOvQGEdSJIcUj4mlSgYdszMgwTwUJvAEwFzR8DCGNE4UuB
        whe+8AUgfOELXwDCF77wBSB84QtfAMIXvvB1CU6GgS988yxKtPpo3ag1X+svLgDluQe1bnDeUwI++MI3
        fBHR6qX1U61fa23X+tLyP6XyS+c9z2jdqfVN5zMJ+MLX4ChwnG+m1h+0/m6lP79aPuN9rXqt051/I18D
        vvA1NjppTdT6k5W9xRby2ZO0KvOwOOELX2PjPK3nLPeFEpmSOOrzWhfkUXHCF75GRpHTOfKB1fJLLz/U
        GuLkkKsBX/gaG8c4nSR7reDWX8u/PdrJJdcCvvA12jkl8S+S/dIFkQJVXNpatakoUaVVZaqksq39/8eW
        Hms/lwLEPzu55NIvFXxDwlfUpqI07/gO1drn90tGiiKq/Qkd1WlX9VXfu+9yde2aW9Ww58eqn7w2ydbY
        l+5R49bfpYbMGqYuuO4iVXViZ1VYVJisk96YQwUKX5P4Fmq+3Zvhu3mSuuP1u9S4l6eq8Rsmq6Gzh6kB
        mm/nk6I5zVc6Lz7yC6767G7q4mlXqJGv1KoJH8xUk7bPUbWiT+ptzfx0sVq5f51a8+eNas2Bp9SKz9aq
        +q0L1NC64eqkvj3tz0jinur8HChO+BrFt6u6+H7hW6Mm/Mmd72M231+qOZrvTfW3qh7f6qU/ozCn+MoO
        Li/4+UKlncvURTWD1Kj/ufsrWDVNdapm2yHdu/0htWzPWrV63/pD2r9eNXyxwdZDjUvV1VOuV+XRDn4h
        Su9qmIdY4GsI37ad2zl8p6TEd80XG9VD7y1V19x9g2qfI3xlAoOMYXoOlUTP6qquXztS1XxcFwO3re5r
        mtQ0Ry34fPWR8I6SgFy9d72q+bd71Iln9/AD8KCTYxgnW8DXEL7Vcb7bMsBX/7f26anqpHN6hp7v6X6G
        S7qd30MNf3GcBjenWXBxzdi5SK3at84VYFxyeTV98zx18oA+fiBKjqeFsEDhawrfTePsy/xM8p3x+jx1
        yoWnhpZvodZcP85pw/Mozru0ey7avUY1+IB3RJG+Ns/vL1W9k3NYAr4G8JUrKz/mmipfMYET/V0JGMf3
        ZC/3lHsmuWzycs6JWg/sWKBW7l3nG97hEOVytbxzez9TLnuHqEDhGzBf6VOx+X6SXb61v5rqp0/AOL4/
        1/qHW2+pdJi4gYurdlu9mv/ZiqThxbVKg79q8vVevdcy3fJnISpQ+AbMd+DEQXafSrb5Sp/L1VNuCBXf
        tlZsnnTiS9Ozu37VW+oFcErTPLV0zxMpA5SOlfmNS/x0qjzr5G56wDdwvt1alK+MvsgQbFj4nqG1y809
        ZZzUDzy5fLp/x8P68unJ1B3UgTh09nAVcZ9ssdPJ3fSAb5B8izTfaT9qYb4bQ8X3Fq2/JkpUZkjJJAl/
        AGerul1L0oIXL9D6LQ+ryhM6uwH8q5O76QHfIPme0NGeRNXifLcusGdkhoFvvdulikyPlBlSR0+SaP7+
        qc6+f2rYtyE9iPvX2zPazh880Osyqi4EBQrfoPl+EAzfCwZfZDzf47Q2WC4LI753/+X29Eg/HVQyeWLh
        5w1JDZ8k7FE98JQaMnOY1wKM9c53MDXgGzTf+wLkO8t8vh20Xk+UoKyKkoURtT4B3tU0Vy3Z81ja8OJD
        KuPXT7ZXYbkA3KzV3uAChW8+890wRfM9zmi+Mnf6vUQJypJIWRXl5/5JNFkDXJZGD+oRAL/YqB54ZY5q
        27HMDWCj8x1MDfjmM99XzedbrfVxwskTVWX2ctNkAD66d21GAEpHypy3FqjyqvZeK6yqDS5Q+OYx37lv
        L/SadBU4X/nHP3IFuNl4gFHDCxS+AfGVzVJGvlobnMGGgK/Rl1DTX53LJSp84ZvlTpTNXp0ok5LoRHlk
        dyY7qaZ4dVK9FoJOKvgGxbdE820IkK93J2DgfLMwjLK6JYdR1uXfMBV84ZvZqDN3IoXnRJVZlvkB3wD5
        nnrVOYFNtAoL35ssE6dSbnnYayqlnM82NAQFCt8g+cpU69/UmDgV2Bi+spPKTst1McUVASymGOa14eIO
        Kxw718A3aL73X2HiYiBj+JZq/YeVoeWq0pO6dM/j6S+n9F6u+msnd9MDvkHzPUvzfbPl+M4PIV85QSXh
        SanJbagg91HLU+9I2bvO3snWx4YKd1rhCfgGzXfCJS3Cd1VI+cpZ6e9bHlsqXZfUllVPpr5lVdRzy6o/
        avUMUYHCN2i+VZrv4yOyz/dXvrZcM45vxOmRdN9U8cxkNq1sSH5Txc2+N62c4eQcloCvEXyPV8NfGOtp
        AvnKt4/jTO7bKp+XpW2V7W2rfW2r/AetU6zwBXwN4Nv1n05Sw3yYQL7yHa/1Nz9Oet0TIzJycIXcM8ll
        k0/nlNzGWeEN+JrA94zj1eDHR2To4JV1yRy8Yjzfjk7vpPfRVfqeauDES1I+WkmGSubHj67yvmeK6xmt
        ihAXKHwN4nvh+H/9anQgFb6Hjl7LLb79/VxKxXtXZYjFPlzxN4cOV5zk5/DK2cPtoZIkDq+US6d+VvgD
        vibxPbOrPV14hOY73jffh9WQ2cNymu+1Wp/7/GLO8coV9rRL+3jlhlvVsOfG2Guxb98cP756cuz46sED
        7RlSkeSOV5ZcrrFyJ+BrGN/ybprvleeof773MnXN6uHqx5qvLCW+XY5ff3nq1/n6b/ih5Cs9lCOsJM5Y
        tw5bgCGrsI6rKFGllWX2pZYsy5RVZx4LIxJpn5NLYQ4VKHwN5nuMw1f2EyipjPFtnYd8i7Ru0/oshS+d
        KX3uwCuyci/gC99QxJVaTQHA+0TraiucR1XDF745wbeb1ljLZd+1LGqbFRvW6ZbDxQlf+BoZMpwySuu3
        lssc6xbQ350cRmtV5lBhwhe+xt43DdLaZLmssQ5AMoHiv7Qu1WoV8vtS+MLXyJDdSR/Q2m0QuKO1R2um
        VucQFid84Wss37Ot2BHL/0jnC9pDKG2K1bHlbeyhExlGKasqV2Ud26mS9qWqdZvWqQ6lHK5/OLl+K0TF
        CV/4GslXeigvt2LbEyf9ZQqPKVKlndup7gN6qX63DbRnrF21/BY19Ok71W2bxqvaN6arWVt/YS+UmLpp
        phrzRK0aWjdcXTLqh+rUb5+h2kc7qCL9GSmClJwvM7yXFb7wNZav3C/dZLlsp9SsCgrsySe9Lz1dfX/u
        YHXrS+PVmHen2fOoJ+2YY6+yum/nL9TCPQ3OvOmNtmSfdJlO+diBp+zHH9nWoGa9MV+NWHSnOu/qAapD
        dYUqKEjaXSX3my0zx1nhC19j+cqspJHOPYnvy6OKHpXqgjEX24ctjPvj9ENzppvqnd1U6tXMnYt8Ha7Q
        sD+2oEKgLv90rZr+2lx15aTBqkvv45O9zJLvYNpMK/jC11i+Ecd1fMMrqy5XA8b+ixr5Sk0MVDMrp2T5
        5JxPl6W2oeL+2Ekq8v9yXp2ArDi+U7IQb7bM2GQBvvA1mq/cd+zydY9UXKROuewsdfO/j1Y1H89OuHZa
        NlKU/dT9bqDgvcZ6vbr3xVnq3CsvUK1aH+MX4i7nuwUd8IWvsXz7ar3rJyHpAf3O5B/Y90duu6fIcUoP
        fbYyI8cpHb3LypKmNerGGbcks579Xec7BhXwha+xfGXs8Xk/iXTqHbXPrLN3TGmqdz1KSZwz0/AOv88S
        N52wcYrqemp3vxCfC2icFb7wNZavzD6abvmYFtnlnG7qpqd/6rmHunSYyD1TJi6b/Jy0et/Ls1Wvc3v7
        nX453WrZGVfwha/RfAf56TTp0rd7bNdUHwcozNy5OO0TVFansOtqz37f9NupMqgFCxS+8DWWbycrNjfa
        /bLp5Ki6+ZnRvuDF9kp7osXgHe6k9740Sx1/ajc/EDc53z3bAV/4Gs33Z5bHTqkyMULumfzAu8vHbqnZ
        hijnrvvoWJHvPLoFChS+8DWWb3crthwx4T9UVNxKfffuH/o6Nkk0S186tcR9k9fxSzdMv1m10rl7QHzb
        yu56bPjC12i+E7w6TmScdEzjNNfe0rju/uRBtSSNgxMz2bu6pKnBHmf10aEyPosFCl/4Gsu3WmuL6wyp
        LuX2JAmvU1LimrNraeDwDu9UmfriTFXxjY5eEP/Xii0VzXTAF75G871J60u3udEyPdLvpZO459IAOk7c
        T7pdr35UO9hr7rUwGJKFAoUvfI3le5zWRjdnqehZqUa+Uuur40RUt2uJWfD2xVZq1W9ZoKp7dfFy0fUO
        k0wFfOFrNN/TtXYk/MACy14V5QdcvOd08e41qZ9Jn2VdUXON/Z1cAG7XOi2DBQpf+BrN9063zpO20Xb2
        kkg/7innpU/b/nCLTppIdljlgVfnqvbVHbw6U0ZlsEDhC19j+bbWetyr53T8+zO+tiQykeZ+usxIePGl
        mI/uekKde+X5XpdRa7SKM1Cc8IWv0Xy/ofWe5bINkuyEMslnz6npl0/xHtXbFo7y2p5JVlp1yUCBwhe+
        RvP9ttb+hLOmOpfZ2yD57TyZ+sl8tXzvL811UKczZeYb8+092lwACpOBGShQ+MLXaL6yvdDBRB8kGyDa
        a6Sb/N0/zdi5KPCZU34mVsgebX0uOt0NoDC5LQMFCl/4Gs23zu1eQnY/9XvvZPz901G65I4feN1Hzc5A
        gcIXvsbyde1AkQkHsvWx7H7qB56smZbdUhr2bTAenuzWOnT2cK9JFY85jLLSQQVf+AbNt8xt6aQcenDV
        8h/77kCRHVMW7m4wugPl8I6Unz9eYx/e4ALwBYdRqgFf+BrNVw5FfCvRB8iJJ352Szl8vzQTFk/4HU+9
        54UZ9gkuLgC3OIxSDfjC12i+VVq/T/QBbSpK1fBN43wDlN1SjZs/7dKTOn3zPFXWscwN4HsOo1QDvvA1
        mq+soPrIctkpdeSrtUkBfHTP2pAA3GDvyV5e5brRwodprlyDL3yN5isTBZrcxlDv+O/JvgFOaZqnHt0b
        HoAPvvOI11hqU5qTVeALX6P5ApAChS8GkBjgqDenHDoTzUN3b39Qrdj3pN1BIQmarDUHnlLzG5cEXqDw
        hW+QfF0BlnRqa/eiCkRxUi+NfvMeVf+7hWq+dqYHDZfAkx1W2lWWB1ag8IVv0HxdARYURmyI4qR+1LZz
        O1UebW+7Uhgk8CL6OwZVoPCFb9B8XQGi7BYogm/QfAFIgcIXAwAWBQrffOQrs4QaAZVQjRmYqQZf+BrL
        V1YKrQRUQq2w0tu2Cr7wNZ5vf1w04ZZK/TKwXh2+8DWeb3/HSRud+4Z8VqPjnJkoTvjCNzR8i537hS55
        riorM7vVwhe+ucSXIAiCIAiCIIjwxf8DDIBT/sGZAzcAAAAASUVORK5CYII=
</value>
  </data>
</root>